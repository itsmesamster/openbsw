name: IWYU Analysis

on: [push, pull_request]


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.22.x'
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
          python-version: '3.10'
    
    - name: Install python dependencies
      run: |
          python -m pip install --upgrade pip
  
    - name: Install iwyu
      run: |
            sudo apt-get update 
            sudo apt-get install -y iwyu

    - name: Export CXXFLAGS

    #Since Clang 17 is installed in usr/bin, it will search for built-ins in /usr/lib/clang/17/include.
    #The purpose of this step is to help the clang toolchain used by IWYU to locate the correct system
    #header directories.

      run: |
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON executables/referenceApp
        export CXXFLAGS="-isystem /usr/lib/llvm-17/lib/clang/17/include/"
        echo "done exporting"
        python3 iwyu_tool.py -p compile_commands.json 2>&1 > iwyu_output.txt | tee iwyu_output.txt
        echo "Output in iwyu_output.txt"
  
    - name: Print IWYU output
      run: cat iwyu_output.txt
  
    # - name: Parse and annotate IWYU output
    #   run: |
    #     cat iwyu_output.txt | while IFS= read -r line; do
    #       if [[ "$line" =~ ^(.+):([0-9]+):([0-9]+):\ (.+)$ ]]; then
    #         FILE="${BASH_REMATCH[1]}"
    #         LINE="${BASH_REMATCH[2]}"
    #         COL="${BASH_REMATCH[3]}"
    #         MESSAGE="${BASH_REMATCH[4]}"
    #         # warning annotation
    #         echo "::warning file=$FILE,line=$LINE,col=$COL::$MESSAGE"
    #       fi
    #     done

    # - name: Permission to parse
    #   run: chmod +x iwyu_parse.sh
      
    # - name: Parse IWYU Output and Generate Annotations
    #   run: |
    #        ./iwyu_parse.sh
    #   shell: bash

    - name: Parse IWYU output and set notices
      run: |
          while IFS= read -r line; do
            file=$(echo "$line" | cut -d':' -f1)
            line_number=$(echo "$line" | cut -d':' -f2)
            message=$(echo "$line" | cut -d':' -f3- | sed 's/^ //')
            echo "::notice file=$file,line=$line_number,title=IWYU Notice::$message"
          done < iwyu_output.txt